---
import type { ResumeSchema } from "@kurone-kito/jsonresume-types";
import { Formats, formatDate } from "../../utils/dates";
import Subheader from "./Subheader.astro";
import ListItem from "./ListItem.astro";
import List from "./List.astro";
interface Props {
  data: NonNullable<ResumeSchema["education"]>;
}

const { data } = Astro.props;

const educationFormatted = data.map((d) => ({
  ...d,
  ...(d.startDate
    ? { startDateFormatted: formatDate(d.startDate, Formats.Year) }
    : {}),
  ...(d.endDate
    ? { endDateFormatted: formatDate(d.endDate, Formats.Year) }
    : {}),
}));
---

<Subheader>Education</Subheader>
<List>
  {
    educationFormatted.map(
      ({
        studyType,
        area,
        institution,
        startDateFormatted,
        endDateFormatted,
        courses,
      }) => (
        <ListItem>
          <strong>
            {studyType}, {area}, {institution}
          </strong>
          &nbsp;&#x2014;&nbsp;
          <i>
            {startDateFormatted || "Unknown"} - {endDateFormatted || "Present"}
          </i>
          {courses?.length ? (
            <div>
              <i>Relevant Courses:&nbsp;{courses.join(", ")}</i>
            </div>
          ): <></>}
        </ListItem>
      )
    )
  }
</List>
